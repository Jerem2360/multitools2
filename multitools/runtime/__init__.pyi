from typing import overload
from ..interface import Buffer, SupportsIndex


class Memory:
    @overload
    def __init__(self, size: SupportsIndex) -> None: ...
    @overload
    def __init__(self, buffer: Buffer) -> None: ...
    def __del__(self) -> None: ...
    @overload
    def __getitem__(self, item: SupportsIndex) -> int: ...
    @overload
    def __getitem__(self, item: slice) -> list[int]: ...
    @overload
    def __setitem__(self, key: SupportsIndex, value: SupportsIndex) -> None: ...
    @overload
    def __setitem__(self, key: slice, value: list[SupportsIndex] | bytes) -> None: ...
    def __delitem__(self, key: SupportsIndex | slice) -> None: ...
    def __bytes__(self) -> bytes: ...
    def __len__(self) -> int: ...
    def __repr__(self) -> str: ...
    def view(self) -> memoryview: ...
    def release(self) -> None: ...
    address: int = ...
    obj: Buffer | None = ...

