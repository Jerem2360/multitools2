from .base import CType


class Short(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> Short: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class UShort(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> UShort: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class Long(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> Long: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class ULong(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> ULong: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class Int(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> Int: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class UInt(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> UInt: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class LongLong(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> LongLong: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...


class ULongLong(int, metaclass=CType):
    base: str = ...

    def __new__(cls, value: int, *args, **kwargs) -> ULongLong: ...
    def __repr__(self) -> str: ...
    def __float__(self) -> float: ...
    def __str__(self) -> str: ...
    def __int__(self) -> int: ...
    def __bool__(self) -> bool: ...

